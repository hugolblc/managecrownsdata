[{"path":"https://hugolblc.github.io/managecrownsdata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 managecrownsdata authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugo Leblanc. Author, maintainer.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leblanc H (2024). managecrownsdata: Package (One Line, Title Case). R package version 0.0.0.9000, https://hugolblc.github.io/managecrownsdata/, https://github.com/hugolblc/managecrownsdata.","code":"@Manual{,   title = {managecrownsdata: What the Package Does (One Line, Title Case)},   author = {Hugo Leblanc},   year = {2024},   note = {R package version 0.0.0.9000, https://hugolblc.github.io/managecrownsdata/},   url = {https://github.com/hugolblc/managecrownsdata}, }"},{"path":"https://hugolblc.github.io/managecrownsdata/index.html","id":"managecrownsdata-","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"R package aims streamlining, standardizing facilitating processing repetead UAV surveys R. focuses (now) RGB data. notably allows generating 3D 4D mosaics & mosaics spatial alignment using state---art approaches, provides tools generate reference labels, segment crowns (?) classify crown phenophases.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/index.html","id":"pre-installation-called-once","dir":"","previous_headings":"","what":"Pre-installation (called once)","title":"What the Package Does (One Line, Title Case)","text":"","code":"# Install miniconda install.packages('reticulate') # Install reticulate options(timeout=100000000)  reticulate::install_miniconda(path = \"C:/miniconda\", update = T)   # Some checks library(reticulate) py_config() py_discover_config() virtualenv_list()   # Create a conda environment from the environment.yaml file conda_create(envname = \"pipeline_test_R\",              environment = 'C:/Users/2022hl001/Downloads/environment.yaml',              conda = 'C:/Users/2022hl001/AppData/Local/r-miniconda/condabin/conda')   # Check if the environment has been created and listed when you call conda_list() conda_list()"},{"path":"https://hugolblc.github.io/managecrownsdata/index.html","id":"installation-called-once","dir":"","previous_headings":"","what":"Installation (called once)","title":"What the Package Does (One Line, Title Case)","text":"can install development version managecrownsdata like :","code":"remotes::install_github(\"hugolblc/managecrownsdata\")"},{"path":"https://hugolblc.github.io/managecrownsdata/index.html","id":"use-managecrownsdata-called-before-loading-managecrownsdata-","dir":"","previous_headings":"","what":"Use managecrownsdata (called before loading managecrownsdata )","title":"What the Package Does (One Line, Title Case)","text":"","code":"# Restrt R session .rs.restartR()  #  Sys.setenv(RETICULATE_PYTHON= reticulate::conda_python('pipeline_test_R'))  library(reticulate)  use_condaenv(condaenv = \"pipeline_test_R\", conda = 'C:/Users/2022hl001/AppData/Local/r-miniconda/condabin/conda')"},{"path":"https://hugolblc.github.io/managecrownsdata/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"What the Package Does (One Line, Title Case)","text":"","code":"library(managecrownsdata)  arosics_in_r(path_in = 'E:/test_arosics/in',               ref_filepath = 'E:/test_arosics/ref/CHM_1m_crs2.tif',              out_dir_path = 'E:/test_arosics/out')"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/arosics_in_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the crown file compatibility — arosics_in_r","title":"Check the crown file compatibility — arosics_in_r","text":"Check crown file compatibility","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/arosics_in_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the crown file compatibility — arosics_in_r","text":"","code":"arosics_in_r(   path_in,   ref_filepath,   out_dir_path,   corr_type = \"global\",   max_shift = 250L,   max_iter = 100L,   grid_res = 1000L,   window_size = NULL,   window_pos = list(NULL, NULL),   mp = NULL,   save_data = TRUE,   save_vector_plot = FALSE,   dynamic_corr = FALSE,   apply_matrix = FALSE )"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/arosics_in_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the crown file compatibility — arosics_in_r","text":"path_in xx ref_filepath xx out_dir_path xx corr_type xx max_shift xx max_iter xx grid_res xx window_size xx window_pos xx mp xx save_data xx save_vector_plot xx dynamic_corr xx apply_matrix xx","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/arosics_in_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the crown file compatibility — arosics_in_r","text":"Text give information file. Indicates whether file compatible  functions package. Pay attention line starting '– ERROR –'.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/check_crownFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the crown file compatibility — check_crownFile","title":"Check the crown file compatibility — check_crownFile","text":"Check crown file compatibility","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/check_crownFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the crown file compatibility — check_crownFile","text":"","code":"check_crownFile(crownFile)"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/check_crownFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the crown file compatibility — check_crownFile","text":"crownFile sf object","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/check_crownFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the crown file compatibility — check_crownFile","text":"Text give information file. Indicates whether file compatible  functions package. Pay attention line starting '– ERROR –'.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/check_crownFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the crown file compatibility — check_crownFile","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(terra) #> terra 1.7.83  mean_lat <- 46.07998 sd_lat <- 0.1 mean_long <- 8.931849 sd_long <-  0.1  set.seed(42) dat_sim <- data.frame(lat = rnorm(3, mean = mean_lat, sd = sd_lat),                       long = rnorm(3, mean = mean_long, sd = sd_long))  dat_sf <- sf::st_as_sf(dat_sim, coords = c(\"long\", \"lat\"), crs = 4326) %>%    sf::st_transform(3035)  # Buffer circles by 100m crownFile <- sf::st_buffer(dat_sf, dist = 1000) %>%    dplyr::mutate(id = c(122,202,122),           family = c('Fabaceae', 'Ochnaceae', 'Fabaceae'),           gen = c('Newtonia','Lophira','Guibourtia'),           tx_sp_lvl = c('Newtonia leucocarpa','Lophira alata','Guibourtia tessmannii'),           plot_name = 'mbalmayo_pheno_observatory',           code_sp = c(12856, 1690, 5691))  base::plot(crownFile$geometry, border = 'blue', lwd = 2) terra::text(terra::vect(crownFile), labels=\"id\", halo = TRUE, col = 'blue')   check_crownFile(crownFile) #> ##########     VARIABLES CHECK     ########## #> -                                           - #> --- OK ----  :   geometry #> --- OK ----  :   id #> --- OK ----  :   family #> -- ERROR --  :   gen variable missing or not well named #> -- ERROR --  :   tx_sp_lvl variable missing or not well named #> --- OK ----  :   plot_name #> --- OK ----  :   code_sp #> -                                           - #> -                                           - #> ##########           CRS           ########## #> -                                           - #> CRS : EPSG:3035 #> -                                           - #> -                                           - #> ##########   DUPLICATED ID CHECK   ########## #> -                                           - #> -- ERROR --  :  The following id are duplicated : #> 122"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/create_labelingFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create xlsx labeling file — create_labelingFile","title":"Create xlsx labeling file — create_labelingFile","text":"function create xlsx file labeling","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/create_labelingFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create xlsx labeling file — create_labelingFile","text":"","code":"create_labelingFile(   crownFile,   site = NULL,   date = NULL,   save_xlsx = FALSE,   directory = NULL )"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/create_labelingFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create xlsx labeling file — create_labelingFile","text":"crownFile sf object crowns delineation. site chr. name site, p.e 'Mbalmayo'. date chr. vector dates (format 'yyyy_mm_dd', p.e '2022_09_25'). save_xlsx log. TRUE, save table xlsx file. Indicate path directory parameters directory path save xlsx file.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_crownsImages.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract crowns images — extract_crownsImages","title":"Extract crowns images — extract_crownsImages","text":"function extracts save .jpeg images crown date.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_crownsImages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract crowns images — extract_crownsImages","text":"","code":"extract_crownsImages(   crownFile,   RGB_paths,   site = NULL,   date = NULL,   crs = NULL,   directory = NULL,   specific_quality = FALSE,   width = 250,   height = 300 )"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_crownsImages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract crowns images — extract_crownsImages","text":"crownFile sf object 'id' variable. id must unique RGB_paths list full paths RGB rasters. site chr. name site, p.e 'Mbalmayo'. date chr. Vector dates (format '%Y_%m_%d', p.e '2022_09_25'). order dates match order dates image RGB_paths. crs crs. Object class 'crs', get st_crs(..). NULL, use transform data crs first RGB image. directory chr. path directory use stored images. function create folder, need exists. specific_quality Logical, TRUE quality image determine height width arguments. width specific_quality = TRUE, width device height specific_quality = TRUE, height device","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_crownsImages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract crowns images — extract_crownsImages","text":"extract_crownsImages() create one folder per id save images. folder names 'crown_the idthe specie name' exemple 'crown_5_Lophira alata'. images names 'crownthe idthe specie namethe date.jpeg' exemple 'crown_5_Lophira alata_2022-11-08.jpeg'. function upload square image neighbouring tree title add top, image size 720825 pixels. specific_quality FALSE, image size 250300 default can changed specifying specific_quality TRUE complete height width arguments.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_crownsImages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract crowns images — extract_crownsImages","text":"","code":"if (FALSE) { # \\dontrun{  library(tidyverse)  directory <- 'C:/Users/2022hl001/Desktop/temp/test' crownFile <- st_read(\"/processed_shp/Mbalmayo_crowns_2023_11_08.gpkg\") site = 'Mbalmayo' crs = 'EPSG:32632' RGB_paths = list.files('F:/VIA/Cameroun/Mbalmayo/Pheno/RGB', pattern = \"\\\\.tif$\", full.names = TRUE) date <- as.Date ( sapply( str_split(basename(RGB_paths),'_'), function(x) paste0(x[2],x[3],x[4]) ), \"%Y%m%d\" ) crownFile <- st_transform(crownFile, st_crs( read_stars(RGB_paths[1],proxy = T)))  # Default parameters (quality of image : 720*825 pixels)  extract_crownsImages(    crownFile = crownFile,    RGB_paths = RGB_paths,    directory = directory,    date = date,    tx_sp_lvl = 'tx_sp_lvl',    specific_quality = TRUE    )  #' # Extraction with specific height and width  extract_crownsImages(    crownFile = crownFile,    RGB_paths = RGB_paths,    directory = directory,    date = date,    tx_sp_lvl = 'tx_sp_lvl',    specific_quality = FALSE,    height = 500,    width = 430    )  } # }"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_rgbValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract RGB metrics — extract_rgbValues","title":"Extract RGB metrics — extract_rgbValues","text":"function extracts RGB metrics (red, green, blue, sumrgb, rcc, gcc, bcc, gndvi, gli) crown date. first compute metrics whole mosaics extracts value crown scale using exactextractr::exact_extract function. mean / variance can extracted (see 'fun' parameter).","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_rgbValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract RGB metrics — extract_rgbValues","text":"","code":"extract_rgbValues(   crownFile,   RGB_paths,   site = NULL,   date = NULL,   crs = NULL,   fun = \"all\",   infos = FALSE )"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_rgbValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract RGB metrics — extract_rgbValues","text":"crownFile sf object crowns delineation. RGB_paths list full paths RGB rasters. site chr. name site, p.e 'Mbalmayo'. date chr. vector dates (format 'yyyy_mm_dd', p.e '2022_09_25'). order dates match order RGB_paths ! crs crs. Object class 'crs', get st_crs(..). NULL, use transform data crs first RGB image. fun chr. Specify function used 'fun' parameter exactextractr::exact_extract function extract RGB values, 'mean', 'var' ''. infos logical. Specify whether return details extraction. TRUE, specify crowns extracting per date, image.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/extract_rgbValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract RGB metrics — extract_rgbValues","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(dplyr) library(stringr)  path <- system.file(package=\"phenobsappli\") RGB_paths <- list.files(file.path(path, 'tif'), full.names = TRUE) crowns <- read_sf (list.files(file.path(path, 'shp'), full.names = TRUE)) date = sapply( str_split( basename( RGB_paths ),'_' ),                      function(x) str_remove(paste(x[2], x[3], x[4], sep ='_'),'.tif') ) crs = sf::st_crs(stars::read_stars(RGB_paths[1], proxy = TRUE)) site = 'Mbalmayo'  test <- extract_rgbValues(    crowns,    RGB_paths,    crs = crs,    site = site,    date = date,    fun = 'all',    infos = TRUE) } # }"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/format_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Format labels values from wide data to long data — format_labels","title":"Format labels values from wide data to long data — format_labels","text":"function format labels data wide long format","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/format_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format labels values from wide data to long data — format_labels","text":"","code":"format_labels(wideLabels)"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/format_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format labels values from wide data to long data — format_labels","text":"wideLabels tibble dataframe contains labels directly import xlsx file.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/format_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format labels values from wide data to long data — format_labels","text":"tibble","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/merge_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge labels and rgb values — merge_values","title":"Merge labels and rgb values — merge_values","text":"function merge labels long format rgb metrics values.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/merge_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge labels and rgb values — merge_values","text":"","code":"merge_values(longLabels, rgbValues)"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/merge_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge labels and rgb values — merge_values","text":"longLabels tibble dataframe contains labels directly import xlsx file. rgbValues tibble dataframe rgb metrics values.","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/merge_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge labels and rgb values — merge_values","text":"tibble","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/plot_heatmapLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the heatmap of Labels — plot_heatmapLabels","title":"Plot the heatmap of Labels — plot_heatmapLabels","text":"fct function","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/plot_heatmapLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the heatmap of Labels — plot_heatmapLabels","text":"","code":"plot_heatmapLabels(   longLabels,   Specie = NULL,   Genus = NULL,   Family = NULL,   title = NULL )"},{"path":"https://hugolblc.github.io/managecrownsdata/reference/plot_heatmapLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the heatmap of Labels — plot_heatmapLabels","text":"longLabels tibble Specie chr Genus chr Family chr title chr","code":""},{"path":"https://hugolblc.github.io/managecrownsdata/reference/plot_heatmapLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the heatmap of Labels — plot_heatmapLabels","text":"return ggplot","code":""}]
